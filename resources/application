#!/bin/bash

if [[ -f "./env.sh" ]]; then
  echo "Use env variables from file ${PWD}/.env.sh"
  source ./env.sh
fi

DB_CONTAINER_NAME="spring-postgres"
workDir="${WORKING_DIRECTORY:=~/Workspace}"

help() {
  echo "
  Usage:
    ./application init - init working directory and datebase
    ./application clean - clean working directory and stop DB
    ./application build - run JUnit tests to check app health (-skipTests arg to skip tests) and build jar
    ./application up - launch application
  "
}

init() {
  # init working directory
  mkdir -p "${workDir}"
  cd "${workDir}" || exit

  # git clone
  if [[ ! -d "spring-starter" ]]; then
    git clone git@github.com:dmdev2020/spring-starter.git
  fi
  cd "spring-starter" || exit
  git checkout lesson-125

  # postgres Docker
  sudo docker pull postgres
  # check if container is start use docker command
  if sudo docker ps -a | gerp "${DB_CONTAINER_NAME}"; then
    sudo docker start "${DB_CONTAINER_NAME}"
  else
    # use \ to continue write same command on next line
    sudo docker run --name "${DB_CONTAINER_NAME}" \
      -e POSTGRES_PASSWORD=pass \
      -e POSTGRES_USER=postgres \
      -e POSTGRES_DB=postgres \
      -p 5433:5432 \
      -d postgres
  fi
}

clean() {
  #remove working dir
  echo "Removing working directory ${workDir}"
  rm -rf "${workDir}"

  # stop docker container PostgreSQL
  if sudo docker ps | grep "${DB_CONTAINER_NAME}"; then
    echo "Stopping container name ${DB_CONTAINER_NAME}"
    sudo docker stop "${DB_CONTAINER_NAME}"
  fi
}

build() {
  cd "${workDir}/spring-starter" || exit
  ./gradlew clean
  if [[ "$1" = "-skipTests" ]] || ./gradlew test; then
    echo "Application is building..."
    ./gradlew bootJar
  else
    echo "Test failed. See test report or send -skipTests arg to skip tests"
  fi
}

up() {
  cd "${workDir}/spring-starter/build/libs" || exit
  java -jar spring-starter-*.jar
}

case $1 in
help)
  help
  ;;
init)
  init
  ;;
clean)
  clean
  ;;
build)
  # second is argument and it is not requared
  build $2
  ;;
up)
  up
  ;;
*)
  echo "$1 This command is not valid"
  exit 1
  ;;
esac
